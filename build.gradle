// ------------------------------------------------------------------
// build.gradle for Minecraft Forge 1.20.1 + Mixed Food mod
// Applies 'java' so we can configure java.toolchain
// Uses buildscript so ForgeGradle is loaded from Forge’s Maven repo
// Compatible with Gradle 7.x / 8.x
// ------------------------------------------------------------------

buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        mavenCentral()
    }
    dependencies {
        // ForgeGradle 6.x (1.20.1)
        classpath "net.minecraftforge.gradle:ForgeGradle:6.0.+"
    }
}

plugins {
    id 'java'            // <— Apply Java plugin so "java { toolchain { … } }" works
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}

group = mod_group_id
version = mod_version

// Java 17 toolchain (Forge 1.20.1 requires Java 17)
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

println "Java: ${System.getProperty('java.version')} | " +
        "JVM: ${System.getProperty('java.vm.version')} | " +
        "Vendor: ${System.getProperty('java.vendor')}"

apply plugin: 'net.minecraftforge.gradle'

minecraft {
    // Use the official Mojang mappings for 1.20.1
    mappings channel: mapping_channel, version: mapping_version

    // Ensure IDE runs copy over resources
    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id,
                 '--all',
                 '--output', file('src/generated/resources/'),
                 '--existing', file('src/main/resources/')
        }
    }
}

// Include generated data resources
sourceSets.main.resources.srcDirs += 'src/generated/resources'

repositories {
    // buildscript already added Forge's Maven; add extras if needed
    mavenCentral()
}

dependencies {
    // Pull in Minecraft + Forge 1.20.1
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

tasks.named('processResources', ProcessResources).configure {
    // Token replacement in mods.toml, pack.mcmeta, etc.
    var replaceProps = [
        mod_id: mod_id,
        mod_name: mod_name,
        mod_version: mod_version,
        mod_group_id: mod_group_id,
        mod_authors: mod_authors,
        mod_license: mod_license,
        mod_description: mod_description,
        minecraft_version: minecraft_version,
        forge_version: forge_version,
        minecraft_version_range: minecraft_version_range,
        forge_version_range: forge_version_range,
        loader_version_range: loader_version_range
    ]
    inputs.properties(replaceProps)

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand(replaceProps + [project: project])
    }
}

tasks.named('jar', Jar).configure {
    // By default, Gradle names the JAR: "<rootProject.name>-<version>.jar"
    // If you want the base name to always be mod_id, uncomment below:
    // archiveBaseName.set(mod_id)

    manifest {
        attributes(
            'Specification-Title'     : mod_id,
            'Specification-Vendor'    : mod_authors,
            'Specification-Version'   : '1',
            'Implementation-Title'    : project.name,
            'Implementation-Version'  : project.version,
            'Implementation-Vendor'   : mod_authors,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
    finalizedBy 'reobfJar'
}

publishing {
    publications {
        create('mavenJava', MavenPublication) {
            artifact(tasks.named("jar"))
        }
    }
    repositories {
        maven {
            url = uri("$buildDir/mcmodsrepo")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
